name: Docker Multi-Arch Build with Build Cloud

on:
  push:
    branches:
      - main

env:
  DOCKER_USER: ${{ vars.DOCKER_USER }}
  DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
  DOCKER_REGISTRY: adamrollogi
  BASE_IMAGE: base:latest
  PHP_IMAGE: php
  PHP_NGINX_IMAGE: php-nginx
  PHP_VERSIONS: "8.1 8.2 8.3 8.4"
  PLATFORMS: "linux/amd64,linux/arm64"

jobs:
  # Build Base Image First
  build-base:
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: üîë Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PAT }}

      # Set up Docker Buildx with Docker Build Cloud
      - name: üõ†Ô∏è Set up Docker Buildx with Build Cloud
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "${{ env.DOCKER_USER }}/medusa"
          install: true

      # Build and Push Base Image
      - name: üöÄ Build Base Image with Build Cloud
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: ./alpine/base
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.BASE_IMAGE }}
          outputs: 'type=registry'
          provenance: true
          sbom: true

  # Build PHP and PHP-NGINX Images after Base Image
  build-php:
    needs: build-base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: [8.1, 8.2, 8.3, 8.4]
    steps:
      # Checkout Code
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: üîë Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PAT }}

      # Set up Docker Buildx with Docker Build Cloud
      - name: üõ†Ô∏è Set up Docker Buildx with Build Cloud
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "${{ env.DOCKER_USER }}/medusa"
          install: true

      # Prepare Clean PHP Version
      - name: üõ†Ô∏è Prepare Clean PHP Version for PHP-NGINX Build
        run: echo "PHP_VERSION=$(echo ${{ matrix.php_version }} | tr -d '.')" >> $GITHUB_ENV

      # Build and Push PHP Image
      - name: üêò Build PHP Image (${{ matrix.php_version }}) with Build Cloud
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: ./alpine/php
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.PHP_IMAGE }}:${{ matrix.php_version }}
          build-args: |
            PHP_VERSION=${{ env.PHP_VERSION }}
          outputs: 'type=registry'
          provenance: true
          sbom: true

      # Prepare Clean PHP Version
      - name: üõ†Ô∏è Prepare Clean PHP Version for PHP-NGINX Build
        run: echo "PHP_VERSION=$(echo ${{ matrix.php_version }} | tr -d '.')" >> $GITHUB_ENV

      # Build and Push PHP-NGINX Image
      - name: üåê Build PHP-NGINX Image (${{ matrix.php_version }}) with Build Cloud
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: ./alpine/php-nginx
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.PHP_NGINX_IMAGE }}:${{ matrix.php_version }}
          build-args: |
            PHP_IMAGE_TAG=${{ matrix.php_version }}
            PHP_VERSION=${{ env.PHP_VERSION }}
          outputs: 'type=registry'
          provenance: true
          sbom: true

      # Verify Build Results
      - name: ‚úÖ Verify Built Images
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_REGISTRY }}/${{ env.PHP_IMAGE }}:${{ matrix.php_version }}
          docker buildx imagetools inspect ${{ env.DOCKER_REGISTRY }}/${{ env.PHP_NGINX_IMAGE }}:${{ matrix.php_version }}